

- name: Ensures machine agent {{machine_agent_dest_folder_linux}} dir exists
  file: 
    path: "{{ machine_agent_dest_folder_linux }}/"
    state: directory     
    mode: 0755
    owner: appdynamics
    group: appdynamics


- name: Install boto3 and botocore using pip3 
  pip:
      name: 
      - boto3
      - botocore
      executable: pip3 # --user

- name: Get Machine Agent from AWS S3
  vars:
      ansible_python_interpreter: /usr/bin/python3 
  aws_s3: 
    bucket: "{{ aws_s3_.bucket_name }}"
    object: "{{ aws_s3_.object_keys.machine_agent }}"
    dest: "{{ machine_agent_dest_folder_linux }}/{{ ma_agent_dest_file }}"
    mode: get
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"

# Nexus example 
#- name: Unzip machine agent file
#  unarchive: 
#    src: '{{ nexus.base_url }}?{{ machine_agent_search_parameters }}'
#    dest: "{{ machine_agent_dest_folder_linux }}"
#    owner: appdynamics
#    group: appdynamics
#    copy: no
#    creates: "{{ machine_agent_dest_folder_linux }}/bin/machine-agent"

- name: Unzip machine agent file
  unarchive: 
    src:  "{{ machine_agent_dest_folder_linux }}/{{ ma_agent_dest_file }}"
    dest: "{{ machine_agent_dest_folder_linux }}"
    owner: appdynamics
    group: appdynamics
    copy: no
    creates: "{{ machine_agent_dest_folder_linux }}/bin/machine-agent"

- name: Configure Machine Agent controller-info.xml file 
  template:
    src: templates/machine-agent-controller-info.xml.j2
    dest: '{{ machine_agent_dest_folder_linux }}/conf/controller-info.xml' # its best to ver-xxx folder, do this by introducing a versionvariable 
    owner: appdynamics
    group: appdynamics
    mode: 0755  

- name: Ensure machine agent file is executable
  file:
    path: "{{ machine_agent_dest_folder_linux }}/bin/machine-agent"
    mode: 0755

- name: Configure the analytics agent
  include: configure_log_analytics_linux.yml
  when: enable_analytics_agent == true

- name: Add the Agent as a Service using Systemd
  template:
    src: templates/appdynamics-machine-agent.service.j2
    dest: /etc/systemd/system/appdynamics-machine-agent.service
    owner: root
    group: root
    mode: 0644  
  register: machine_agent_systemd_result

- name: Enable the Machine Agent to start at system startup
  systemd:
    name: appdynamics-machine-agent
    enabled: yes
    masked: no

- name: Start the agent service
  systemd:
    name: appdynamics-machine-agent
    state: restarted
    daemon_reload: yes

- name: Make sure the service is running
  command: systemctl status appdynamics-machine-agent
  register: result
  ignore_errors: yes

- name: Show Machine Agent status 
  debug:
     var: result

- name: Clean up - remove {{ ma_agent_dest_file }} 
  file:
    path: "{{ machine_agent_dest_folder_linux }}/{{ ma_agent_dest_file }}"
    state: absent

