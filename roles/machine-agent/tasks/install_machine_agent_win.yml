
- name: Ensures machine agent {{machine_agent_dest_folder_win}} dir exists
  win_file:
    path: "{{ machine_agent_dest_folder_win }}"
    state: directory


- name: Downloading Windows Machine Agent on targets
  win_get_url:
    url: "{{ agent_download_url.stdout }}"
    dest: "{{ machine_agent_dest_folder_win }}/{{ ma_agent_dest_file }}"
    force: 'true'

- name: Unzip machine agent file
  win_unzip:
    src: "{{ machine_agent_dest_folder_win }}/{{ ma_agent_dest_file }}"
    dest: "{{ machine_agent_dest_folder_win }}"
    creates: "{{ machine_agent_dest_folder_win }}/InstallService.vbs"

- name: Configure machine-agent controller-info.xml
  template:
    src: templates/machine-agent-controller-info.xml.j2
    dest: '{{ machine_agent_dest_folder_win }}/conf/controller-info.xml'
    force: yes

- name: Remove StdIn.Read in the InstallService.vbs file which stops the playbook from returning
  win_lineinfile:
    dest: '{{ machine_agent_dest_folder_win }}/InstallService.vbs'
    regexp: "^WScript.StdIn.Read"
    state: absent
  register: remove_read_std_in_result

- name: Remove StdIn.Read result
  debug:
    var: remove_read_std_in_result

- name: Configure the analytics agent
  include: configure_log_analytics_win.yml
  when: enable_analytics_agent == true

- name: 'Install machine agent service'
  win_command: cscript.exe "{{ machine_agent_dest_folder_win }}/InstallService.vbs"
  register: install_win_service_result

- name: Install service result
  debug:
    var: install_win_service_result

- name: Clean up - remove {{ ma_agent_dest_file }} from Ansible controller 
  file:
    path: "{{ temp_dir }}/{{ ma_agent_dest_file }}"
    state: absent
  delegate_to: localhost

- name: Clean up - remove {{ ma_agent_dest_file }} 
  win_file:
    path: "{{ machine_agent_dest_folder_win }}/{{ ma_agent_dest_file }}"
    state: absent