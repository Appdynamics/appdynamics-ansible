---
# App owners would either need to chown the entire agent folder to their app's user  OR grant their app's user read/write access to the agent folder 
- name: Java Linux Block
  become: true
  block: 
    - name: Ensures application agent dir exists
      file: 
        path: "{{ java_agent_dest_folder_linux }}/"
        state: directory     
        mode: 0755
        recurse: yes
      changed_when: false # this ensures this task is idempotent 

    - name: Remove previous {{ java_agent_dest_file }} 
      file:
        path: "{{ java_agent_dest_folder_linux }}/{{ java_agent_dest_file }}"
        state: absent  
      changed_when: false # this ensures this task is idempotent 
      
       # Leaving this here for some orgs who does not allow agent downloads on remote server. 
       # add delegate_to: localhost 

    - name: Downloading Java Agent to target
      get_url:
        url: '{{ agent_download_url.stdout }}'
        dest: "{{ java_agent_dest_folder_linux }}/{{ java_agent_dest_file }}"
        force: true # download a new file even if javaagent.zip exists. 
      changed_when: false
      register: result
      failed_when: result.status_code != 200

    - debug: 
         msg: "{{ result }}" 

    - name: Check if java agent exists
      stat: path="{{ java_agent_dest_folder_linux }}/javaagent.jar"
      register: previous_agent
      
    - name: Backup old Java agent to /tmp folder
      archive: 
        path: "{{ java_agent_dest_folder_linux }}"
        dest: "/tmp/java_agent.{{ ansible_date_time.iso8601 }}.zip"   
      when: previous_agent.stat.exists
      changed_when: false
        
    - name: Clean up old agent after backup  
      command: "rm -rf {{ java_agent_dest_folder_linux }}/*"
      args:
         warn: false
      when: previous_agent.stat.exists
      changed_when: false

    - name: Unzip the application agent file
      unarchive: 
        #src: "{{ agent_download_url.stdout }}"
        src: "{{ java_agent_dest_folder_linux }}/{{ java_agent_dest_file }}"
        dest: "{{ java_agent_dest_folder_linux }}"   
        remote_src: yes 
      changed_when: false

    - name: Configure Java agent's controller-info.xml
      template:
        src: templates/application-agent-controller-info.xml.j2
        dest: '{{ java_agent_dest_folder_linux }}/conf/controller-info.xml'
        mode: 0755  
      changed_when: false

    - name: Copy controller-info.xml to the versioned agent folder 
      shell: cp  {{ java_agent_dest_folder_linux }}/conf/controller-info.xml  {{ java_agent_dest_folder_linux }}/ver*/conf/
      changed_when: false

    - name: Clean up - remove {{ java_agent_dest_file }} 
      file:
        path: "{{ java_agent_dest_folder_linux }}/{{ java_agent_dest_file }}"
        state: absent  
      changed_when: false # this ensures this task is idempotent 
