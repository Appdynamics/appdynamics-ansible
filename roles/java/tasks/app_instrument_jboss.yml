- block:
    - name: Check jboss path is present
      stat: 
        path: "{{ app.jboss_config | dirname }}"
      register: p
      failed_when: p.stat.isdir is not defined
  rescue:
    - fail:
        msg: "Please make sure {{ app.jboss_config | dirname }} is present. Is Jboss installed?"

# - name: Add jboss user to {{ appdynamics_user }} group
#   become: yes
#   include: add_user.yml

- name:  Add appd instrumentation to jboss
  become: yes
  register: instrumentation
  replace:
    path: "{{ app.jboss_config }}"
    regexp: '^(?:.*export APPD(?:.|\s)+?\s*)?\s*while\s+true;\s*do\s*(if\s*\[.+LAUNCH_JBOSS_IN_BACKGROUND.+)'
    replace: |-
      export APPDYNAMICS_AGENT_APPLICATION_NAME="{{ app.application_name }}"
      export APPDYNAMICS_AGENT_TIER_NAME="{{ app.tier_name }}"
      export APPDYNAMICS_AGENT_NODE_NAME="{{ app.node_name }}"
      export JAVA_OPTS="$JAVA_OPTS -Djboss.modules.system.pkgs=org.jboss.byteman,com.singularity"
      export JAVA_OPTS="$JAVA_OPTS -javaagent:{{ java_agent_dest_folder_linux }}/javaagent.jar{{ ' -Dappdynamics.http.proxyHost='+proxy_host if enable_proxy else '' }}{{' -Dappdynamics.http.proxyPort='+proxy_port if enable_proxy else ''}}"
      while true;do
      \1
    backup: "{{ app.backup | bool }}"
