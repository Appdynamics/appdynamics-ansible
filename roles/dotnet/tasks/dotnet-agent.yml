- name: Ensures application agent dir exists
  win_file:
    path: "{{ dotnet_agent_dest_folder_win }}\\"
    state: directory

- name: Download DotNet Agent MSI 
  win_get_url:
     url: '{{ agent_download_url.stdout }}'
     dest: '{{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}'
     force: 'true'

- name: Configure Winston conf file
  template:
    src: templates/application-agent-controller-info.xml.j2
    dest: "{{ dotnet_agent_dest_folder_win }}\\controller-info.xml"
    force: yes

- name: "Check if DotNet agent is installed"
  win_shell: "get-wmiobject Win32_Product | Select-Object IdentifyingNumber, Name | Where{$_.Name -Match 'AppDynamics*'} | Select-Object -ExpandProperty IdentifyingNumber"
  register: is_agent_installed

- debug: 
   msg: "{{ is_agent_installed.stdout | regex_replace ('\\r\\n', '') }}"

- name: Unistall the agent if it exists
  win_package: 
    product_id: "{{ is_agent_installed.stdout | regex_replace ('\\r\\n', '') }}"
    log_path: "{{ dotnet_agent_dest_folder_win }}/UninstallLogs.txt"
    state: absent
  when: is_agent_installed.stdout | length != 0
  
- name: Remove the conf file # Since it does not update during installation 
  win_file:
    path: "C:\\ProgramData\\AppDynamics\\DotNetAgent\\Config\\config.xml"
    state: absent
    force: true
  when: is_agent_installed.stdout | length != 0
    
- name: Install application agent service
  win_package: 
    arguments: "AD_SetupFile={{ dotnet_agent_dest_folder_win }}\\controller-info.xml"
    path: "{{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"
    log_path: "{{ dotnet_agent_dest_folder_win }}/InstallLogs.txt"
    state: present
  register: install_app_agent_result

- name: Install service result
  debug:
    var: install_app_agent_result
    
- name: Clean up - remove {{ dotnet_agent_dest_file }} 
  win_file:
    path: "{{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"
    state: absent
