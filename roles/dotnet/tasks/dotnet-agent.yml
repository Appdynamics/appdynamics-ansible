- name: Ensures application agent dir exists
  win_file:
    path: "{{ dotnet_agent_dest_folder_win }}\\"
    state: directory

- name: Download DotNet Agent MSI 
  win_get_url:
     url: '{{ agent_download_url.stdout }}'
     dest: '{{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}'
     force: 'true'

- name: Configure Winston conf file
  template:
    src: templates/application-agent-controller-info.xml.j2
    dest: "{{ dotnet_agent_dest_folder_win }}\\controller-info.xml"
    force: yes

- name: Unistall the agent if it exists
  win_package: 
    path: "{{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"
    arguments: "AD_SetupFile={{ dotnet_agent_dest_folder_win }}\\controller-info.xml"
    product_id: "{84B2C875-943E-4E0B-A231-8174D42E01C0}"
    log_path: "{{ dotnet_agent_dest_folder_win }}/Logs.txt"
    state: absent
  
- name: Remove the conf file #Since it does not update during installation 
  win_file:
    path: "C:\\ProgramData\\AppDynamics\\DotNetAgent\\Config\\config.xml"
    state: absent
    force: true

- name: Install application agent service
  win_package: 
    path: "{{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"
    arguments: "AD_SetupFile={{ dotnet_agent_dest_folder_win }}\\controller-info.xml"
    product_id: "{84B2C875-943E-4E0B-A231-8174D42E01C0}"
    log_path: "{{ dotnet_agent_dest_folder_win }}/Logs.txt"
    state: present
  register: install_app_agent_result

#- name: Install agent service 
#  register: install_app_agent_result
#  win_shell: "msiexec /i {{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }} /q /norestart /lv {{ dotnet_agent_dest_folder_win }}\\AgentInstaller.log AD_SetupFile={{ dotnet_agent_dest_folder_win }}\\controller-info.xml"

- name: Install service result
  debug:
    var: install_app_agent_result
    
- name: Clean up - remove {{ dotnet_agent_dest_file }} 
  win_file:
    path: "{{ dotnet_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"
    state: absent
