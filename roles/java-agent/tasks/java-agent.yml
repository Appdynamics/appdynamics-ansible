- name: Java on linux 
  block:
    # App owners would either need the chown the entire agent folder to their app's user  OR grant their app's user read/write access to the agent folder 
    - name: Ensures application agent {{java_agent_dest_folder_linux}} dir exists
      file: 
        path: "{{ java_agent_dest_folder_linux }}/"
        state: directory     
        mode: 0755
        owner: appdynamics 
        group: appdynamics

    - name: Get Java Agent from AWS S3
      vars:
          ansible_python_interpreter: /usr/bin/python3 
      aws_s3: 
        bucket: "{{ aws_s3_.bucket_name }}"
        object: "{{ aws_s3_.object_keys.java_agent }}"
        dest: "{{java_agent_dest_folder_linux }}/{{ app_agent_dest_file }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        mode: get

    - name: Unarchive the application agent file
      unarchive: 
        #src: "{{ nexus.base_url }}?{{ application_agent_search_parameters }}" # for nexus
        src: "{{java_agent_dest_folder_linux }}/{{ app_agent_dest_file }}"
        dest: "{{ java_agent_dest_folder_linux }}"
        owner: appdynamics
        group: appdynamics    
        copy: no

    - name: Install java-agent config
      template:
        src: templates/application-agent-controller-info.xml.j2
        dest: '{{ java_agent_dest_folder_linux }}/conf/controller-info.xml'
        owner: appdynamics
        group: appdynamics
        mode: 0755  

    - name: Verify java agent config
      command: less  '{{ java_agent_dest_folder_linux }}/conf/controller-info.xml'
      register: content
      ignore_errors: yes

    - name: Show config file content
      debug:
        var: content

    #put in handlers 

    - name: Clean up - remove {{ app_agent_dest_file }} 
      file:
        path: "{{ java_agent_dest_folder_linux }}/{{ app_agent_dest_file }}"
        state: absent
  when: ansible_os_family != 'Windows'