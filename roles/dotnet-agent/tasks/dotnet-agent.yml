
- name: Ensures application agent dir exists
  win_file:
    path: "{{ dot_agent_dest_folder_win }}\\"
    state: directory

#- name: Download DotNet Agent MSI from Nexus
#  win_get_url:
#    url: '{{ nexus.base_url }}?{{ application_agent_search_parameters }}'
#    dest: '{{ temp_folder }}{{ application_agent_dest_file }}'
#    force: 'true'

- name: Download DotNet Agent MSI from S3
  vars:
      ansible_python_interpreter: /usr/bin/python3 
  aws_s3: 
    bucket: "{{ aws_s3_.bucket_name }}"
    object: "{{ aws_s3_.object_keys.dotnet_agent }}"
    dest: "{{ temp_dir }}/{{ dotnet_agent_dest_file }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    mode: get
  delegate_to: localhost # the download is done on the ansible controller


- name: Copy dotnet MSI from Ansible controller to Windows host3
  win_copy:
    src: "{{ temp_dir }}/{{ dotnet_agent_dest_file }}"
    dest: "{{ dot_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"

- name: Configure Winston conf file
  template:
    src: templates/application-agent-controller-info.xml.j2
    dest: "{{ dot_agent_dest_folder_win }}\\controller-info.xml"
    force: yes

    
- name: Set the unique host id so that machines appear correctly for APM
  win_environment:
  state: present
  level: machine
  name: "APPDYNAMICS_AGENT_UNIQUE_HOST_ID"
  value: "{{ host_name }}"

- name: Install application agent service
  #become: yes
  #become_method: runas
  #become_user: Administrator
  win_package: 
    path: "{{ dot_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"
    #path: C:\appdynamics\dotnet-agent\dotNetAgentSetup64.msi
    arguments: "AD_SetupFile={{ dot_agent_dest_folder_win }}\\controller-info.xml"
    product_id: "{84B2C875-943E-4E0B-A231-8174D42E01C0}"
    #log_path: "{{ dot_agent_dest_folder_win }}"
    state: present
  register: install_app_agent_result

- name: Install service result
  debug:
    var: install_app_agent_result
    
- name: Clean up - remove {{ dotnet_agent_dest_file }} from Ansible controller 
  file:
    path: "{{ temp_dir }}/{{ dotnet_agent_dest_file }}"
    state: absent
  delegate_to: localhost

- name: Clean up - remove {{ dotnet_agent_dest_file }} 
  win_file:
    path: "{{ dot_agent_dest_folder_win }}\\{{ dotnet_agent_dest_file }}"
    state: absent
