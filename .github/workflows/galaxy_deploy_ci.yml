name: "galaxy deploy"
on:
  push:
   branches: [ master, develop ]
jobs:
  deploy_galaxy:
    runs-on: ubuntu-latest
    env:
      APPD_RELEASE_VERSION: ${ GITHUB_REF/refs\/tags\// }
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    strategy:
      fail-fast: true
      matrix:
        distro:
          - centos7
        #  - debian10
        collection_role:
          - db
          - java
          - machine
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python 3s
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install molecule-docker docker yamllint ansible-lint flake8
      
      - name: Build the collection
        run: |
          collection_file=$( basename $(ansible-galaxy collection build -f | awk -F" " '{print $NF}'))
          echo "COLLECTION_FILE=$collection_file" >> $GITHUB_ENV
        
      - name: Install the collection
        run: ansible-galaxy collection install ${{ env.COLLECTION_FILE }}

      - name: Sanity test the collection
        run: |
           cd /home/runner/.ansible/collections/ansible_collections/appdynamics/agents
           ansible-test sanity --docker default -v
      
      #Cal me paranoid if you like, but this too must pass before I deploy to galaxy :) 
      - name: Test ALL AppDynamics roles 
        run: >-
          molecule --version &&
          ansible --version &&
          molecule --debug test -s ${{ matrix.collection_role }} 
        env: 
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Deploy to Galaxy 
        run: >-
          echo " GitHub tag: ${{ env.APPD_RELEASE_VERSION }} "  # Expected out is semantic versioning format - X.Y.Z
          ansible-playbook build/galaxy_deploy.yml
        env: 
           ANSIBLE_GALAXY_TOKEN: ${{ secrets.ANSIBLE_GALAXY_TOKEN }}
