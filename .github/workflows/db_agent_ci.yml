name: "appdynamics.agents.db"
on:
  push:
    paths:
      - 'roles/db/**'
      - 'molecule/db/**'
      - '.github/workflows/db_agent_ci.yml'
      - 'roles/common/**'
  pull_request:
    paths:
      - 'roles/db/**'
      - 'molecule/db/**'
      - '.github/workflows/db_agent_ci.yml'
      - 'roles/common/**'
jobs:
  molecule:
    runs-on: ubuntu-latest
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        distro:
          - centos7
          - debian10
        collection_role:
          - db
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install molecule-docker docker yamllint ansible-lint flake8 lxml
      
      - name: Build the collection
        run: |
          collection_file=$( basename $(ansible-galaxy collection build -f | awk -F" " '{print $NF}'))
          echo "COLLECTION_FILE=$collection_file" >> $GITHUB_ENV
        
      - name: Install the collection
        run: ansible-galaxy collection install ${{ env.COLLECTION_FILE }}
      
      #- name: Test the collection
      #  run: |
      #     cd /home/runner/.ansible/collections/ansible_collections/appdynamics/agents
      #     ansible-test sanity --docker default -v
      - name: Run role tests
        run: >-
          molecule --version &&
          ansible --version &&
          molecule --base-config molecule/base-docker.yml --debug test -s ${{ matrix.collection_role }} 
        env: 
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

  molecule-windows:
    runs-on: windows-2019
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    strategy:
      fail-fast: true
      matrix:
        distro:
          # - windows2016
          - windows2019
        collection_role:
          - db
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
          
      - name: Set git to use LF
        shell: cmd
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out code
        uses: actions/checkout@v2

      # - name: Allow basic auth
      #   shell: powershell
      #   run: |
      #     Set-Item -Path WSMan:\localhost\Service\Auth\Basic -Value $true

      - name: Prepare WinRM
        shell: cmd
        run: | 
          winrm quickconfig -q -force
          winrm enumerate winrm/config/Listener
      - name: Create user
        shell: cmd
        run: | 
          net user appdynamics molecule123! /add /passwordchg:no /passwordreq:yes /active:yes /Y
          net localgroup Administrators appdynamics /add
      
      # https://github.com/marketplace/actions/setup-wsl#action
      - name: Setup WSL
        uses: Vampire/setup-wsl@v1
        with:
          wsl-shell-command: bash -e -u -o pipefail

      - name: Update path in WSL
        run: |
          echo 'PATH=$HOME/.local/bin:$PATH' >> ~/.vars
          source ~/.vars
          echo $PATH

      - name: Checkout pip cache
        uses: actions/cache@v2
        with:
          path: ./pip-cache
          key: ${{ runner.os }}-pip-ansible
          #${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Ansible in WSL
        run: |
          echo $PATH
          source ~/.vars
          mkdir -p ./pip-cache
          sudo apt-get update
          sudo apt-get install python3-pip git libffi-dev libssl-dev -y
          pip3 install --cache-dir=./pip-cache --user ansible pywinrm
    
      - name: Install test dependencies
        run: | 
          pip3 install --cache-dir=./pip-cache --user ansible molecule[lint] yamllint ansible-lint flake8 lxml
          sudo apt-get install jq curl -y
      
      - name: Build the collection
        run: |
          source ~/.vars
          collection_file=$( basename $(ansible-galaxy collection build -f | awk -F" " '{print $NF}'))
          echo $collection_file
          echo "COLLECTION_FILE=$collection_file" >> ~/.vars
        
      - name: Install the collection
        run: |
          source ~/.vars
          ansible-galaxy collection install $COLLECTION_FILE
      
      - name: Run role tests
        run: >-
          source ~/.vars &&
          molecule --version &&
          ansible --version &&
          molecule --base-config molecule/base-windows.yml --debug test -s ${{ matrix.collection_role }}
        env: 
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
