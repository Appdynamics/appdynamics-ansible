name: "Windows tests"
on:
  push:
    # paths:
    #   - 'roles/dotnetcore/**'
    #   - 'molecule/dotnetcore/**'
    #   - '.github/workflows/dotnet_core_agent_ci.yml'
    #   - 'roles/common/**'
  pull_request:
    # paths:
    #   - 'roles/dotnetcore/**'
    #   - 'molecule/dotnetcore/**'
    #   - '.github/workflows/dotnet_core_agent_ci.yml'
    #   - 'roles/common/**'
jobs:
  molecule:
    runs-on: windows-2019
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    strategy:
      fail-fast: true
      matrix:
        distro:
          # - windows2016
          - windows2019
        collection_role:
          - dotnet
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
      - name: Update Admin Pass
        shell: cmd
        run: | 
          net user appdynamics molecule123! /add /passwordchg:no /passwordreq:yes /active:yes /Y
          net localgroup Administrators appdynamics /add
      
      - name: Set git to use LF
        shell: cmd
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out code
        uses: actions/checkout@v2

        # https://github.com/marketplace/actions/setup-wsl#action
      - name: Setup WSL
        uses: Vampire/setup-wsl@v1
        with:
          wsl-shell-command: bash -e -u -o pipefail

      - name: Add path
        run: |
          env
          ls -lah
          echo 'PATH=$HOME/.local/bin:$PATH' >> ~/.bashrc
          echo $PATH
          source ~/.bashrc
          echo $PATH

      - name: Check pip cache
        uses: actions/cache@v2
        with:
          path: ./pip-cache
          key: ${{ runner.os }}-pip-ansible
          #${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Ansible in WSL
        # shell: wsl-bash {0}
        run: |
          echo $PATH
          source ~/.bashrc
          mkdir ./pip-cache
          echo $PATH
          sudo apt-get update
          sudo apt-get install python3-pip git libffi-dev libssl-dev -y
          pip3 install --cache-dir=./pip-cache --user ansible pywinrm

      # - name: Set up Python 3
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'
    
      - name: Install test dependencies.
        run: | 
          pip3 install --cache-dir=./pip-cache --user ansible molecule[lint] yamllint ansible-lint flake8 lxml
          sudo apt-get install jq curl -y
      