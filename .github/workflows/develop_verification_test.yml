name: "Develop Verification Test"
on:
  push:
   branches: [ develop ]
jobs:
  develop_CI:
    runs-on: ubuntu-latest
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    strategy:
      fail-fast: true
      matrix:
        distro:
          - centos7
          - debian10
    steps:
      - name: Check out code
        uses: actions/checkout@v2
     
      - name: Set APPD_RELEASE_VERSION
        run: echo "APPD_RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Set up Python 3s
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies.
        run: pip3 install ansible molecule-docker docker yamllint ansible-lint flake8 lxml
      
      - name: Building the collection
        run: |
          collection_file=$( basename $(ansible-galaxy collection build -f | awk -F" " '{print $NF}'))
          echo "COLLECTION_FILE=$collection_file" >> $GITHUB_ENV
        
      - name: Test Install the collection
        run: ansible-galaxy collection install ${{ env.COLLECTION_FILE }}

      - name: Test Machine role 
        run: >-
          molecule --version &&
          ansible --version &&
          molecule --base-config molecule/base-docker.yml --debug test -s machine 
        env: 
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}  
      
      - name: Test Java Role 
        run: >-
          molecule --version &&
          ansible --version &&
          molecule --base-config molecule/base-docker.yml --debug test -s java 
        env: 
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}

      - name: Test DB role 
        run: >-
          molecule --version &&
          ansible --version &&
          molecule --base-config molecule/base-docker.yml --debug test -s db 
        env: 
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}  
